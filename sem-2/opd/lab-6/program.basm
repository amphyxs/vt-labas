	ORG	0x000	; Инициализация векторов прерывания
V1:	WORD	$INT1, 0x180	; Вектор прерывания #1
V3:	WORD	$INT3, 0x180	; Вектор прерывания #3

	ORG	0x010	; Загрузка начальных векторов прерывания
START:	DI
	LD	#0x0
	OUT	0x01	; MR КВУ-0 - запретить прерывания
	LD	#0x8
	OUT	0x03	; MR КВУ-1 на вектор 1
	LD	#0x0
	OUT	0x05	; MR КВУ-2 - запретить прерывания
	LD	#0x9
	OUT	0x07	; MR КВУ-3 на вектор 3
	LD	#0x0
	OUT	0x0B	; MR КВУ-4 - запретить прерывания
	LD	#0x0
	OUT	0x0E	; MR КВУ-5 - запретить прерывания
	LD	#0x0
	OUT	0x12	; MR КВУ-6 - запретить прерывания
	LD	#0x0
	OUT	0x16	; MR КВУ-7 - запретить прерывания
	LD	#0x0
	OUT	0x1A	; MR КВУ-8 - запретить прерывания
	LD	#0x0
	OUT	0x1E	; MR КВУ-9 - запретить прерывания
	JUMP	MAIN	; Переход в основную программу

	ORG	0x038	; Данные
X:	WORD	?
XMIN:	WORD	0xFFEC	; Минимальное значение X по ОДЗ
XMAX:	WORD	0x0016	; Максимальное значение X по ОДЗ

	ORG	0x050	; Основная программа
MAIN:	CLA
	ST	X	; Инициализация X нулевым значениям
	EI		; Теперь можно прерываться
XLOOP:	DI		; При обработке X запрещаем прерывания
	LD	X
	SUB	#0x3
	CALL	XCHECK	; Проверка X на ОДЗ
	ST	X
	NOP		; Breakpoint
	EI		; Обработка X завершена
	JUMP	XLOOP	

	ORG	0x060	; Процедура, принимающая X в аккумуляторе,
			; проверяющая его на соответствие ОДЗ.
			; Если значение AC выходит за ОДЗ, то оно
			; перезапишется значением XMAX, иначе
			; останется прежним.
XCHECK:	CMP	XMAX	; Проверка на правую границу
	BEQ	RETX	; Если равно правой границе, то выход
	BGE	CHANGEX	; Если строго больше правой границы, то меняем
	CMP	XMIN	; Проверка на левую границу
	BLT	CHANGEX	; Если строго меньше левой границы, то меняем
	JUMP	RETX	; Иначе AC внутри границ - выход
CHANGEX:LD	XMAX	; Перезаписываем AC
RETX:	RET

	ORG	0x070	; Обработчик прерывания ВУ-1
INT1:	NOP		; Breakpoint
	DI		; Запретить внутренние прерывания
	PUSH		; Сохранение AC в стек
	LD	X	; Загружаем X
	ADD	X	; AC = 2X
	ADD	X	; AC = 3X
	ADD	X	; AC = 4X
	ADD	X	; AC = 5X
	ADD	X	; AC = 6X
	NEG		; AC = -6X
	ADD	#5	; AC = -6X + 5
	OUT	0x02	; Вывод на ВУ-1
	POP		; Возврат AC
	NOP		; Breakpoint
	EI
	IRET	

	ORG	0x080	; Обработчик прерывания ВУ-3
INT3:	NOP		; Breakpoint
	DI
	PUSH		; Сохранение AC в стек
	CLA
	IN	0x06	; Ввод с ВУ-3
	SXTB
	CALL	XCHECK	; Проверка введённого значения
	ST	X	; Модификация X введённым значением
	POP		; Возврат AC
	NOP		; Breakpoint
	EI
	IRET
