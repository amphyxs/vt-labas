/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    implementation 'org.json:json:20220924'

    implementation files('libs/serialized-objects-lib.jar')

    implementation 'ch.qos.logback:logback-classic:1.3.6'

    implementation 'org.slf4j:slf4j-api:2.0.7'

    implementation 'ch.qos.logback:logback-core:1.3.6'

    implementation 'org.postgresql:postgresql:42.6.0'
}

application {
    // Define the main class for the application.
    mainClass = 'lab7.server.Main'
}

tasks.register('makeJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    manifest {
        attributes(
            'Main-Class': 'lab7.server.Main'
        )
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
