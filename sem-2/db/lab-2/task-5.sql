WITH ОЦЕНКИ_СТУДЕНТОВ AS (  -- Вспомогаетльная таблица, ставящая в соответствие каждой оценке ИД и ФИО её получившего студента 
    SELECT Н_ЛЮДИ.ИД AS ИД, format('%s %s %s', Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО, Н_УЧЕНИКИ.ГРУППА AS ГРУППА, ОЦ.ИНВ_ОЦЕНКА AS ИНВ_ОЦЕНКА
    FROM Н_УЧЕНИКИ
    JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
    JOIN ( -- Так как в таблице Н_ОЦЕНКИ поле СОРТ тем меньше, чем лучше оценка, мы должны "инвертировать" его, чтобы оно стало тем больше, чем лучше оценка (т.е. вычесть из макс. оценки текущую в строке)
        SELECT Н_ОЦЕНКИ.КОД, COALESCE(ГЛОБ_МАКС_ОЦЕНКА.МАКС_ОЦЕНКА - Н_ОЦЕНКИ.СОРТ, ГЛОБ_МАКС_ОЦЕНКА.МАКС_ОЦЕНКА) AS ИНВ_ОЦЕНКА  -- COALESCE - функция, берущая второй аргумент, если первый NULL
        FROM Н_ОЦЕНКИ
        CROSS JOIN (  -- Ставим справа от каждого типа оценки максимальную возможную оценку (это нужно для вычислений)
            SELECT MAX(Н_ОЦЕНКИ.СОРТ) AS МАКС_ОЦЕНКА
            FROM Н_ОЦЕНКИ
        ) AS ГЛОБ_МАКС_ОЦЕНКА
    ) AS ОЦ ON Н_ВЕДОМОСТИ.ОЦЕНКА = ОЦ.КОД
)
SELECT ОЦЕНКИ_СТУДЕНТОВ.ИД AS Номер, ОЦЕНКИ_СТУДЕНТОВ.ФИО, AVG(ОЦЕНКИ_СТУДЕНТОВ.ИНВ_ОЦЕНКА) AS Ср_оценка
FROM ОЦЕНКИ_СТУДЕНТОВ
WHERE ОЦЕНКИ_СТУДЕНТОВ.ГРУППА = '4100'
GROUP BY ОЦЕНКИ_СТУДЕНТОВ.ИД, ОЦЕНКИ_СТУДЕНТОВ.ФИО
HAVING AVG(ОЦЕНКИ_СТУДЕНТОВ.ИНВ_ОЦЕНКА) > ( -- Находим макс. оценку группы 1101
    SELECT MAX(ОЦЕНКИ_СТУДЕНТОВ.ИНВ_ОЦЕНКА)
    FROM ОЦЕНКИ_СТУДЕНТОВ
    WHERE ОЦЕНКИ_СТУДЕНТОВ.ГРУППА = '1101'
);