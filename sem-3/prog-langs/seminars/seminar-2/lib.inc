parse_uint:
    xor rcx, rcx                        ; обнуляем счётчик цифр
    xor rax, rax
    mov r8d, 10                         ; сохраняем константу: множитель для перевода из 10-СС в 16-СС
    .A:
        mov dl, [rdi]                   ; читааем очередной символ в dl
        cmp dl, 0                       ; проверка на нуль-терминал
        je .B                         
        sub dl, '0'                     ; получаем десятичную цифру вычитаением кода символа первой цифры
        cmp dl, 0                       ; если меньше нуля, то это не цифра
        jl .B                         
        cmp dl, 9                       ; если больше 9, то это не цифра
        jg .B
        push rdx                        ; сохраняем rdx
        mul r8                          ; переводим в 10-СС по приницпу: ТЕКУЩИЙ РЕЗУЛЬТАТ*10 + НОВАЯ ЦИФРА
        pop rdx                         ; возвращаем rdx
        add al, dl                      ; прибавляем НОВАЯ ЦИФРА
        inc rcx                         ; увеличиваем счётчик цифр
        inc rdi                         ; переходим к адресу следующего символа
        jmp .A
    .B:
        mov rdx, rcx
        ret
